name: Build
on:
  workflow_dispatch:
    inputs:
      version:
        required: true
        type: string
      upload:
        required: false
        type: boolean
        default: false
      sign:
        required: false
        type: boolean
        default: false
  workflow_call:
    inputs:
      version:
        required: true
        type: string
      upload:
        required: false
        type: boolean
        default: false
      sign:
        required: false
        type: boolean
        default: false

defaults:
  run:
    shell: bash

permissions:
  contents: write
  pull-requests: write
  packages: write
  id-token: write

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-22.04
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: '0'
      - name: Set up JDK
        uses: actions/setup-java@8df1039502a15bceb9433410b1a100fbe190c53b # v4.5.0
        with:
          java-version: '17.0.10'
          distribution: 'liberica'
          architecture: 'x64'
      - uses: gradle/wrapper-validation-action@b5418f5a58f5fd2eb486dd7efb368fe7be7eae45 # v2.1.3
      - name: Set up Gradle
        uses: gradle/gradle-build-action@ac2d340dc04d9e1113182899e983b5400c17cda1 # v3.5.0
        with:
          generate-job-summary: true
          dependency-graph: generate-and-submit
      - name: Install cosign
        if: ${{ inputs.sign }}
        uses: sigstore/cosign-installer@dc72c7d5c4d10cd6bcb8cf6e3fd625a9e5e537da # v3.7.0
        with:
          cosign-release: 'v2.1.1'
      - name: Set up QEMU
        uses: docker/setup-qemu-action@49b3bc8e6bdd4a60e6116a5414239cba5943d3cf # v3.2.0
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@c47758b77c9736f4b2ef4073d4d51994fabfe349 # v3.7.1

      - name: Build
        env:
          ORG_GRADLE_PROJECT_projectVersion: ${{ inputs.version }}
          QUARKUS_PACKAGE_TYPE: "uber-jar"
        run: ./gradlew build
      - name: Integration tests
        env:
          ORG_GRADLE_PROJECT_projectVersion: ${{ inputs.version }}
          QUARKUS_PACKAGE_TYPE: "uber-jar"
        run: ./gradlew quarkusIntTest
      - name: Upload build reports
        if: always()
        uses: actions/upload-artifact@b4b15b8c7c6ac21ea08fcf65892d2ee8f75cf882 # v4.4.3
        with:
          name: build-reports
          path: |
            build/reports/
            !build/reports/configuration-cache
      - name: Upload jar
        if: ${{ inputs.upload }}
        uses: actions/upload-artifact@b4b15b8c7c6ac21ea08fcf65892d2ee8f75cf882 # v4.4.3
        with:
          name: pulsar-bookie-utils-${{ inputs.version }}.jar
          path: build/quarkus-build/gen/pulsar-bookie-utils-${{ inputs.version }}-runner.jar
      - name: Rename jar
        run: mv "build/pulsar-bookie-utils-${{ inputs.version }}-runner.jar" "pulsar-bookie-utils-${{ inputs.version }}.jar"
      - name: Add jar to release
        if: ${{ github.event_name == 'release' && inputs.upload }}
        uses: softprops/action-gh-release@c062e08bd532815e2082a85e87e3ef29c3e6d191 # v2.0.8
        with:
          tag_name: ${{ inputs.version }}
          files: |
            pulsar-bookie-utils-${{ inputs.version }}.jar
      - name: Build fast-jar for container
        env:
          ORG_GRADLE_PROJECT_projectVersion: ${{ inputs.version }}
          QUARKUS_PACKAGE_TYPE: "fast-jar"
        run: ./gradlew build
      - name: Registry login
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract docker metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@8e5442c4ef9f78752691e2d8f8d19755c6f78e81 # v5.5.1
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      - name: Build and push
        id: build-and-push
        uses: docker/build-push-action@ca052bb54ab0790a636c9b5f226502c73d547a25 # v5.4.0
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: ${{ inputs.upload }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Sign image
        if: ${{ inputs.sign }}
        env:
          TAGS: ${{ steps.meta.outputs.tags }}
          DIGEST: ${{ steps.build-and-push.outputs.digest }}
        run: echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}

